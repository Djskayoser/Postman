{
	"info": {
		"_postman_id": "3147d122-96b0-41d0-99c0-834e1db7a563",
		"name": "DZ Group 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth (1)",
			"item": [
				{
					"name": "GET",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/get_method?name=Artur&age=35&salary=3500",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "Artur"
								},
								{
									"key": "age",
									"value": "35"
								},
								{
									"key": "salary",
									"value": "3500"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login\n",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Artur",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2",
			"item": [
				{
					"name": "userinfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status code 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Json Structure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"TestStructure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.person.u_name[0]).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.person.u_name[1]).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.person.u_name[2]).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.person.u_age).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.qa_salary_after_6_months).to.be.an(\"number\");\r",
									"    pm.expect(jsonData.start_qa_salary).to.be.an(\"number\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checking the correctness of the result of multiplication by a factor Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test structure after6\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(jsonData.start_qa_salary * 2);\r",
									"});\r",
									"\r",
									"pm.test(\"Test structure after12\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(jsonData.start_qa_salary * 2.9);\r",
									"});\r",
									"\r",
									"pm.test(\"Test structure after1.5\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(jsonData.start_qa_salary * 4);\r",
									"});\r",
									"\r",
									"pm.test(\"Test structure afterstart\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.start_qa_salary).to.eql(jsonData.start_qa_salary);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "structure \\ schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"person\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"u_age\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"u_name\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"u_salary_1_5_year\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"u_age\",\r",
									"        \"u_name\",\r",
									"        \"u_salary_1_5_year\"\r",
									"      ]\r",
									"    },\r",
									"    \"qa_salary_after_12_months\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"qa_salary_after_6_months\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"start_qa_salary\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"person\",\r",
									"    \"qa_salary_after_12_months\",\r",
									"    \"qa_salary_after_6_months\",\r",
									"    \"start_qa_salary\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"pm.response.to.have.jsonSchema(schema)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3",
			"item": [
				{
					"name": "userinfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status code 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "from user info in token param",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable (\"u_salary_1_5_year\", jsonData.person.u_salary_1_5_year);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "new_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"New_data_test1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.salary[0]).to.eql(jsonData.salary[0]);\r",
									"    pm.expect(+jsonData.salary[1]).to.eql(jsonData.salary[0] * 2);\r",
									"    pm.expect(+jsonData.salary[2]).to.eql(jsonData.salary[0] * 3);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test size of salary massive parts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"New_data_test1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(+jsonData.salary[2]).to.above(+jsonData.salary[0]);\r",
									"    pm.expect(+jsonData.salary[2]).to.above(+jsonData.salary[1]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Json Structure \\ type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"TestStructure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.salary[0]).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.salary[1]).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.salary[2]).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.age).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.name).to.be.an(\"string\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "structure \\ schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"age\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"salary\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"age\",\r",
									"    \"name\",\r",
									"    \"salary\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"pm.response.to.have.jsonSchema(schema)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4",
			"item": [
				{
					"name": "userinfo Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "70",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/test_pet_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"test_pet_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Json Structure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"TestStructure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.age).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.daily_food).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.daily_sleep).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "70",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/test_pet_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"test_pet_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "test weight multiplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"New_data_test4\", function () {\r",
									"    var request_data = request.data; \r",
									"    var req_weight = request_data.weight;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.daily_sleep).to.eql(request_data.weight * 2.5);\r",
									"    pm.expect(jsonData.daily_food).to.eql(request_data.weight * 0.012);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "70",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/test_pet_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"test_pet_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "structure \\ schema Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									" \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"age\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"daily_food\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"daily_sleep\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"age\",\r",
									"    \"daily_food\",\r",
									"    \"daily_sleep\",\r",
									"    \"name\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"pm.response.to.have.jsonSchema(schema)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "70",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/test_pet_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"test_pet_info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5",
			"item": [
				{
					"name": "Get_test_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{u_salary_1_5_year}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status code 200 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{u_salary_1_5_year}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Json Structure Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"TestStructure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.age).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.salary).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.family.children[0][0]).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.family.children[0][1]).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.family.children[1][0]).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.family.children[1][1]).to.be.a(\"number\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{u_salary_1_5_year}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "testname",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"nameenvironment\", jsonData.name);\r",
									"\r",
									"pm.test(\"TestStructure\", function () {\r",
									"    var request_data = request.data; \r",
									"    var req_name = request_data.name;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(req_name);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{u_salary_1_5_year}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{nameenvironment}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "testage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"nameenvironment\", jsonData.name);\r",
									"\r",
									"pm.test(\"TestAge\", function () {\r",
									"    var request_data = request.data; \r",
									"    var req_name = request_data.name;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(req_name);\r",
									"    var req_age= request_data.age;\r",
									"    pm.expect(jsonData.age).to.eql(req_age);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{u_salary_1_5_year}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{nameenvironment}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "structure \\ schema Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"age\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"family\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"children\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"u_salary_1_5_year\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"children\",\r",
									"        \"u_salary_1_5_year\"\r",
									"      ]\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"salary\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"age\",\r",
									"    \"family\",\r",
									"    \"name\",\r",
									"    \"salary\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"pm.response.to.have.jsonSchema(schema)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "3500",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Artur",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6",
			"item": [
				{
					"name": "userinfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function getRandom(min,max)\r",
									"{ \r",
									"    return Math.random() * (max - min) * min;\r",
									"}\r",
									"\r",
									"let randomNum = Math.round(getRandom(1, 356));\r",
									"\r",
									"let jsonData = JSON.parse(responseBody);\r",
									"\r",
									"let curID = JSON.parse(jsonData[randomNum].Cur_ID);\r",
									"\r",
									"postman.setEnvironmentVariable(\"Cur_ID\", curID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/currency",
							"host": [
								"{{url}}"
							],
							"path": [
								"currency"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "7",
			"item": [
				{
					"name": "Status code 200 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "{{Cur_ID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/curr_byn",
							"host": [
								"{{url}}"
							],
							"path": [
								"curr_byn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Json Structure Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"TestStructure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.Cur_Abbreviation).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.Cur_ID).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.Cur_Name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.Cur_OfficialRate).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.Cur_Scale).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.Date).to.be.a(\"string\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "{{Cur_ID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/curr_byn",
							"host": [
								"{{url}}"
							],
							"path": [
								"curr_byn"
							]
						}
					},
					"response": []
				},
				{
					"name": "structure \\ schema Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"Cur_Abbreviation\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Cur_ID\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"Cur_Name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Cur_OfficialRate\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"Cur_Scale\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"Date\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"Cur_Abbreviation\",\r",
									"    \"Cur_ID\",\r",
									"    \"Cur_Name\",\r",
									"    \"Cur_OfficialRate\",\r",
									"    \"Cur_Scale\",\r",
									"    \"Date\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"pm.response.to.have.jsonSchema(schema)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "{{Cur_ID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/curr_byn",
							"host": [
								"{{url}}"
							],
							"path": [
								"curr_byn"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "star",
			"item": [
				{
					"name": "userinfo Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var count = pm.info.iterationCount;\r",
									"console.log(count);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "{{Cur_ID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/curr_byn",
							"host": [
								"{{url}}"
							],
							"path": [
								"curr_byn"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}